/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace MochaInterface {

	using System;
	using System.Runtime.InteropServices;

	//using MochaDotNET;
	//using System.ComponentModel;

public partial class AudioAsset : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AudioAsset(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AudioAsset obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AudioAsset() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SharpMochaPINVOKE.delete_AudioAsset(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool is3D_ {
    set {
      SharpMochaPINVOKE.AudioAsset_is3D__set(swigCPtr, value);
    } 
    get {
      bool ret = SharpMochaPINVOKE.AudioAsset_is3D__get(swigCPtr);
      return ret;
    } 
  }

  public Sound handle_ {
    set {
      SharpMochaPINVOKE.AudioAsset_handle__set(swigCPtr, Sound.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SharpMochaPINVOKE.AudioAsset_handle__get(swigCPtr);
      Sound ret = (cPtr == global::System.IntPtr.Zero) ? null : new Sound(cPtr, false);
      return ret;
    } 
  }

  public SoundParameterList paramList_ {
    set {
      SharpMochaPINVOKE.AudioAsset_paramList__set(swigCPtr, SoundParameterList.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SharpMochaPINVOKE.AudioAsset_paramList__get(swigCPtr);
      SoundParameterList ret = (cPtr == global::System.IntPtr.Zero) ? null : new SoundParameterList(cPtr, false);
      return ret;
    } 
  }

  public AudioAsset() : this(SharpMochaPINVOKE.new_AudioAsset(), true) {
  }

}

}
